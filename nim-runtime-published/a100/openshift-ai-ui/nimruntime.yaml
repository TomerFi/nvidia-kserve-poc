apiVersion: serving.kserve.io/v1alpha1
kind: ServingRuntime
labels:
  opendatahub.io/dashboard: "true"
metadata:
  name: kserve-llm-nvidia-nim
  labels:
    name: kserve-llm-nvidia-nim
  annotations:
    opendatahub.io/recommended-accelerators: '["nvidia.com/gpu"]'
    openshift.io/display-name: Nvidia Inference Microservice 24.01
spec:
  # Path storage: This is a patch since Openshift AI expects the model to be mounted on /mnt/models and NIM image mounts the model in /model-store
  # NVIDIA is planning to have a startup parameter like --model-store=/mnt/models in future versions    
  volumes:
    - name: model-store
      emptyDir: {} # ServingRuntime CR does not seem to work with PVC and hence ephermal storage
    - name: cache
      emptyDir: {}
  supportedModelFormats:
    - name: llm-nvidia-nim
      version: "1"
      autoSelect: true
      priority: 1
  protocolVersions:
    - v2
    - grpc-v2
  multiModel: false
  imagePullSecrets: 
    - name: registry-secret
  containers:
    - name: kserve-container
      image: nvcr.io/ohlfw0olaadg/ea-participants/nemollm-inference-ms:24.01
      ports:
        - containerPort: 8080 # TODO, get this working
          protocol: TCP
      command: ["/bin/sh", "-c"]
      args:
        - |
          ln -s /mnt/models/* /model-store/; \
          nemollm_inference_ms \
            --num_gpus=1 \
            --model={{.Name}} \
            --openai_port=8080 \
            --health_port=8088
      imagePullPolicy: IfNotPresent
      # Path storage: This is a patch since Openshift AI expects the model to be mounted on /mnt/models and NIM image mounts the model in /mnt/model-store
      # NVIDIA is planning to have a startup parameter like --model-store=/mnt/models in future versions    
      volumeMounts:
        - name: model-store
          readOnly: false
          mountPath: /model-store
        - name: cache
          readOnly: false
          mountPath: /.cache/huggingface/hub
      # INFO: : Resources and GPU Quantity defaults should be overriden on a per-model basis    
      resources:
        requests:
          cpu: "12"
          memory: 128Gi
        limits:
          cpu: "12"
          memory: 256Gi
